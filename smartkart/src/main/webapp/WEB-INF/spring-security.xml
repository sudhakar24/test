<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns="http://www.springframework.org/schema/security"
	
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	   http://www.springframework.org/schema/beans/spring-beans.xsd 
	   http://www.springframework.org/schema/context
	   http://www.springframework.org/schema/context/spring-context.xsd 
	   http://www.springframework.org/schema/security
	   http://www.springframework.org/schema/security/spring-security.xsd">
	   
 
	<security:http auto-config="true">
		<security:intercept-url pattern="/webapp/resources/**"
			access="permitALL" />
		<security:intercept-url pattern="/login"
			access="permitAll" />
		<security:intercept-url pattern="/admin/**"
			access="hasRole('ROLE_ADMIN')" />
		<security:form-login login-page="/login"
			username-parameter="email" password-parameter="password"
			authentication-success-forward-url="/userLogged"
			authentication-failure-forward-url="/error" />
		<security:access-denied-handler
			error-page="/error" />
		<security:csrf disabled="true" />
		<security:logout logout-url="/logout"
			invalidate-session="true" logout-success-url="/" />
	</security:http>

	<security:authentication-manager>
		<security:authentication-provider>
			<security:jdbc-user-service
				data-source-ref="datasource"
				users-by-username-query="select email, password, 'TRUE' as enabled from user where email=?"
				authorities-by-username-query="select email, role from user where email=?" />
		</security:authentication-provider>
	</security:authentication-manager>

</beans:beans>